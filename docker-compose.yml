version: '3.8'

services:
  # FastAPI 백엔드 서비스
  api:
    build: 
      context: ./api-server
      dockerfile: Dockerfile
    container_name: wrld-relief-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./disasters.db
      - DEBUG=False
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
      - ENABLE_MOCK_DATA=true
      - MOCK_DATA_COUNT=5
    volumes:
      - ./api-server/disasters.db:/app/disasters.db
      - ./api-server/logs:/app/logs
      - ./api-server/uploads:/app/uploads
      - ./api-server/backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - wrld-relief-network

  # Redis 캐시 서비스 (선택사항)
  redis:
    image: redis:7-alpine
    container_name: wrld-relief-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - wrld-relief-network

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: wrld-relief-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - wrld-relief-network

  # 모니터링 서비스 (선택사항)
  prometheus:
    image: prom/prometheus:latest
    container_name: wrld-relief-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - wrld-relief-network

  # Grafana 대시보드 (선택사항)
  grafana:
    image: grafana/grafana:latest
    container_name: wrld-relief-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - wrld-relief-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  wrld-relief-network:
    driver: bridge
    name: wrld-relief-network
